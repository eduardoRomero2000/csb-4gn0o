{"version":3,"sources":["utils/index.js","utils/algoliaConfig.js","ModalEditar.jsx","App.jsx","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","firestore","storage","auth","algoliasearch","require","companyIndexDev","initIndex","ModalBody","styled","Modal","Paper","main","HeaderModal","header","BodyModal","form","ModalEdit","props","open","onClose","companyEdit","updateCompany","useState","loader","setLoader","descriptionCompany","setDescriptioCompany","handleCloseModal","updatePlatform","e","a","preventDefault","collection","doc","docID","update","description","PhrasesMain","TitleWe","partialUpdateObject","objectID","then","console","log","onClick","onSubmit","companyName","onChange","value","target","type","required","placeholder","disabled","size","color","TargetCompany","div","App","companies","setCompanies","openModal","setOpenModal","setCompanyEdit","getCompaniesEmptyInfo","companiesDescriptionEmpty","reduce","acc","company","templateCompany","push","getCompanies","where","get","response","docs","map","data","id","handleModal","useEffect","className","idCompany","deleteCompany","slice","filter","rootElement","document","getElementById","ReactDOM","render"],"mappings":"mNAgBAA,IAASC,cAVM,CACbC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,2CACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,cACnBC,MAAO,6CAKF,I,UAAMC,EAAWT,IAASU,Y,GACVV,IAASW,UACJX,IAASY,O,eCpB/BC,EAAgBC,EAAQ,IAYjBC,GAVSF,EACpB,aACA,oCAEwCG,UAAU,gBAE3BH,EACvB,aACA,oCAE8CG,UAAU,oB,eC4DpDC,EAAYC,YAAOC,IAAPD,CAAH,mJAUTE,EAAQF,IAAOG,KAAV,kGAOLC,EAAcJ,IAAOK,OAAV,wNAcXC,EAAYN,IAAOO,KAAV,ybA2BAC,EA3HG,SAACC,GACjB,IAAQC,EAA8CD,EAA9CC,KAAMC,EAAwCF,EAAxCE,QAASC,EAA+BH,EAA/BG,YAAaC,EAAkBJ,EAAlBI,cACpC,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,EAAmDF,mBAAS,IAA5D,mBAAOG,EAAP,KAA2BC,EAA3B,KAOMC,EAAmB,WACvBD,EAAqB,IACrBP,KAGIS,EAAc,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACrBD,EAAEE,iBACFP,GAAU,GAFW,SAGfzB,EACHiC,WAAW,aACXC,IAAIb,EAAYc,OAChBC,OAAO,CACNC,YAAaX,EACbY,YAAa,CAAEC,QAAS,CAAEF,YAAaX,MARtB,uBAUfpB,EACHkC,oBAAoB,CACnBH,YAAaX,EACbY,YAAa,CAAEC,QAAS,CAAEF,YAAaX,IACvCe,SAAUpB,EAAYc,QAEvBO,MAAK,kBAAMC,QAAQC,IAAI,eAAgBvB,EAAYc,UAhBjC,OAiBrBb,EAAcD,EAAYc,OAC1BV,GAAU,GACVG,IAnBqB,2CAAH,sDAsBpB,OACE,mCACE,cAACpB,EAAD,CAAWW,KAAMA,EAAMC,QAASQ,EAAhC,SACE,eAACjB,EAAD,WACE,eAACE,EAAD,WACE,mDACA,sBAAMgC,QAASjB,EAAf,kBAEF,eAACb,EAAD,CAAW+B,SAAUjB,EAArB,UACE,6BAAKR,EAAY0B,cACjB,0BACEC,SA3Cc,SAAClB,GACzB,IAAQmB,EAAUnB,EAAEoB,OAAZD,MACRtB,EAAqBsB,IA0CXA,MAAOvB,EACPyB,KAAK,OACLC,UAAQ,EACRC,YAAY,wBAEd,wBAAQF,KAAK,SAASG,SAAU9B,EAAhC,SACGA,EAAS,cAAC,aAAD,CAAY+B,KAAM,GAAIC,MAAM,SAAY,uBCahE,IAAMC,EAAgBhD,IAAOiD,IAAV,yPAeJC,EAtFf,WACE,MAAkCpC,mBAAS,IAA3C,mBAAOqC,EAAP,KAAkBC,EAAlB,KACA,EAAkCtC,oBAAS,GAA3C,mBAAOuC,EAAP,KAAkBC,EAAlB,KACA,EAAsCxC,mBAAS,IAA/C,mBAAOF,EAAP,KAAoB2C,EAApB,KAUMC,EAAwB,SAACL,GAC7B,IAAMM,EAA4BN,EAAUO,QAAO,SAACC,EAAKC,GACnB,IAAD,IAAH,IAA5BA,EAAQC,kBAEPD,EAAQhC,cACT,OAACgC,QAAD,IAACA,GAAD,UAACA,EAAS/B,mBAAV,iBAAC,EAAsBC,eAAvB,aAAC,EAA+BF,cAEhC+B,EAAIG,KAAKF,IAGb,OAAOD,IACN,IACHP,EAAaK,IAGTM,EAAY,uCAAG,4BAAAzC,EAAA,sEAEX/B,EAASiC,WAAW,aAAawC,MAAM,SAAU,MAAM,GAAMC,MAFlD,cACbC,EADa,OAGjBC,KAAKC,KAAI,SAACR,GAAD,mBAAC,eACPA,EAAQS,QADF,IAET3C,MAAOkC,EAAQU,QALE,SAObd,EAAsBU,GAPT,2CAAH,qDAUZK,EAAc,SAACX,GACnBN,GAAcD,GAIZE,EAHGF,EAGY,GAFAO,IAUnB,OAJAY,qBAAU,WACRT,MACC,IAGD,sBAAKU,UAAU,MAAf,UACE,cAAC,EAAD,CACE/D,KAAM2C,EACN1C,QAAS4D,EACT3D,YAAaA,EACbC,cApDgB,SAAC6D,GACrB,IACMC,EADqBxB,EAAUyB,QACIC,QACvC,SAACjB,GAAD,OAAaA,EAAQlC,QAAUgD,KAEjCtB,EAAauB,MAiDVxB,EAAUiB,KAAI,SAACR,GACd,OACE,eAACZ,EAAD,CAAeZ,QAAS,kBAAMmC,EAAYX,IAA1C,UACGA,EAAQtB,YACT,oDC/DNwC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.b8907632.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\nimport \"firebase/database\";\nimport \"firebase/firestore\";\n\nconst config = {\n  apiKey: \"AIzaSyAjQjrBMB73R5afENREDa0En7MnZpewQZ0\",\n  authDomain: \"pieza-development.firebaseapp.com\",\n  databaseURL: \"https://pieza-development.firebaseio.com\",\n  projectId: \"pieza-development\",\n  storageBucket: \"pieza-development.appspot.com\",\n  messagingSenderId: \"10560275828\",\n  appId: \"1:10560275828:web:e7979f61272aaca7cd9821\"\n};\n\nfirebase.initializeApp(config);\n\nexport const database = firebase.firestore();\nexport const storage = firebase.storage();\nexport const firebaseAuth = firebase.auth();\nexport { firebase };\n","const algoliasearch = require(\"algoliasearch\");\n\nconst companyClient = algoliasearch(\n  \"CM2VEDLMUC\",\n  \"3af051163f276889c2e6063be6cd3c3a\"\n);\nexport const companyIndex = companyClient.initIndex(\"companyIndex\");\n\nconst companyClientDev = algoliasearch(\n  \"CM2VEDLMUC\",\n  \"6c3acb372c854143043df531d2cce27e\"\n);\nexport const companyIndexDev = companyClientDev.initIndex(\"companyIndexDev\");\n","import React, { useState } from \"react\";\nimport { Modal } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { database } from \"./utils\";\nimport { companyIndexDev } from \"./utils/algoliaConfig\";\nimport { ClipLoader } from \"react-spinners\";\n\nconst ModalEdit = (props) => {\n  const { open, onClose, companyEdit, updateCompany } = props;\n  const [loader, setLoader] = useState(false);\n\n  const [descriptionCompany, setDescriptioCompany] = useState(\"\");\n\n  const handleDescription = (e) => {\n    const { value } = e.target;\n    setDescriptioCompany(value);\n  };\n\n  const handleCloseModal = () => {\n    setDescriptioCompany(\"\");\n    onClose();\n  };\n\n  const updatePlatform = async (e) => {\n    e.preventDefault();\n    setLoader(true);\n    await database\n      .collection(\"companies\")\n      .doc(companyEdit.docID)\n      .update({\n        description: descriptionCompany,\n        PhrasesMain: { TitleWe: { description: descriptionCompany } }\n      });\n    await companyIndexDev\n      .partialUpdateObject({\n        description: descriptionCompany,\n        PhrasesMain: { TitleWe: { description: descriptionCompany } },\n        objectID: companyEdit.docID\n      })\n      .then(() => console.log(\"Se actualizo\", companyEdit.docID));\n    updateCompany(companyEdit.docID);\n    setLoader(false);\n    handleCloseModal();\n  };\n\n  return (\n    <>\n      <ModalBody open={open} onClose={handleCloseModal}>\n        <Paper>\n          <HeaderModal>\n            <p>Editar informacion</p>\n            <span onClick={handleCloseModal}>X</span>\n          </HeaderModal>\n          <BodyModal onSubmit={updatePlatform}>\n            <h1>{companyEdit.companyName}</h1>\n            <textarea\n              onChange={handleDescription}\n              value={descriptionCompany}\n              type=\"text\"\n              required\n              placeholder=\"Ingresa descripcion\"\n            />\n            <button type=\"submit\" disabled={loader}>\n              {loader ? <ClipLoader size={20} color=\"#fff\" /> : \"Guardar\"}\n            </button>\n          </BodyModal>\n        </Paper>\n      </ModalBody>\n    </>\n  );\n};\n\nconst ModalBody = styled(Modal)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  :active,\n  :focus {\n    outline: none;\n  }\n`;\n\nconst Paper = styled.main`\n  background: white;\n  height: 70vh;\n  width: 90vh;\n  padding: 0;\n`;\n\nconst HeaderModal = styled.header`\n  padding: 1rem;\n  display: flex;\n  justify-content: space-between;\n  background: #0073e5;\n  p,\n  span {\n    margin: 0;\n    color: white;\n  }\n  span {\n    cursor: pointer;\n  }\n`;\nconst BodyModal = styled.form`\n  height: 70%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 1rem;\n  padding: 1rem;\n  h1 {\n    margin: 0;\n    text-align: center;\n  }\n  textarea {\n    width: 80%;\n    height: 4rem;\n    resize: none;\n  }\n  button {\n    height: 2rem;\n    width: 6rem;\n    background: #0073e5;\n    color: white;\n    border: none;\n    cursor: pointer;\n  }\n`;\n\nexport default ModalEdit;\n","import React, { useEffect, useState } from \"react\";\nimport { database } from \"./utils\";\nimport styled from \"styled-components\";\nimport ModalEdit from \"./ModalEditar\";\n\nfunction App() {\n  const [companies, setCompanies] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n  const [companyEdit, setCompanyEdit] = useState({});\n\n  const updateCompany = (idCompany) => {\n    const copyArrayCompanies = companies.slice();\n    const deleteCompany = copyArrayCompanies.filter(\n      (company) => company.docID !== idCompany\n    );\n    setCompanies(deleteCompany);\n  };\n\n  const getCompaniesEmptyInfo = (companies) => {\n    const companiesDescriptionEmpty = companies.reduce((acc, company) => {\n      if (company.templateCompany === 1) {\n        if (\n          !company.description &&\n          !company?.PhrasesMain?.TitleWe?.description\n        ) {\n          acc.push(company);\n        }\n      }\n      return acc;\n    }, []);\n    setCompanies(companiesDescriptionEmpty);\n  };\n\n  const getCompanies = async () => {\n    const response = (\n      await database.collection(\"companies\").where(\"active\", \"==\", true).get()\n    ).docs.map((company) => ({\n      ...company.data(),\n      docID: company.id\n    }));\n    await getCompaniesEmptyInfo(response);\n  };\n\n  const handleModal = (company) => {\n    setOpenModal(!openModal);\n    if (!openModal) {\n      setCompanyEdit(company);\n    } else {\n      setCompanyEdit({});\n    }\n  };\n\n  useEffect(() => {\n    getCompanies();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <ModalEdit\n        open={openModal}\n        onClose={handleModal}\n        companyEdit={companyEdit}\n        updateCompany={updateCompany}\n      />\n      {companies.map((company) => {\n        return (\n          <TargetCompany onClick={() => handleModal(company)}>\n            {company.companyName}\n            <span>Editar</span>\n          </TargetCompany>\n        );\n      })}\n    </div>\n  );\n}\n\nconst TargetCompany = styled.div`\n  border-bottom: 1px solid;\n  margin-top: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem;\n  span {\n    cursor: pointer;\n  }\n  span:hover {\n    color: blue;\n  }\n`;\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}